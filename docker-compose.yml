version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_net
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data

  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq:3-management-alpine
    restart: always
    hostname: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672" # RabbitMQ instance
      - "15672:15672" # Web interface
    networks:
      - app_net

  user_service:
    build:
      context: .
      dockerfile: ServiceFinder/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Server=db;Port=5432;Database=ServiceFinder;UserId=postgres;Password=root;Pooling=true;
      RabbitMQ__HostName: rabbitmq
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app_net
    ports:
      - "5001:80"

  order_service:
    build:
      context: .
      dockerfile: ServiceFinder.OrderService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Server=db;Port=5432;Database=ServiceFinderOrderService;UserId=postgres;Password=root;Pooling=true;
      RabbitMQ__HostName: rabbitmq
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app_net
    ports:
      - "5002:80"

  notification_service:
    build:
      context: .
      dockerfile: ServiceFinder.NotificationsService/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      RabbitMQ__HostName: rabbitmq
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app_net
    ports:
      - "5003:80"

networks:
  app_net:
    driver: bridge

volumes:
  db_data:
  rabbitmq_data:
